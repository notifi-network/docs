"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6146],{8236:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(4848),s=t(8453);const i={},o="Node Client",l={id:"alert-trigger/node-client/index",title:"Node Client",description:"The Node Client is available on Github.",source:"@site/versioned_docs/version-1.0.0/alert-trigger/node-client/index.md",sourceDirName:"alert-trigger/node-client",slug:"/alert-trigger/node-client/",permalink:"/docs/1.0.0/alert-trigger/node-client/",draft:!1,unlisted:!1,editUrl:"https://github.com/notifi-network/notifi-network.github.io/blob/main/versioned_docs/version-1.0.0/alert-trigger/node-client/index.md",tags:[],version:"1.0.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Admin Portal & Community Manager",permalink:"/docs/1.0.0/alert-trigger/admin-portal/"},next:{title:"Displaying Notification History",permalink:"/docs/1.0.0/notification-history/"}},a={},c=[{value:"login",id:"login",level:2},{value:"sendSimpleHealthThreshold",id:"sendsimplehealththreshold",level:2},{value:"createTenantUser",id:"createtenantuser",level:2},{value:"createDirectPushAlert",id:"createdirectpushalert",level:2},{value:"sendDirectPush",id:"senddirectpush",level:2},{value:"deleteUserAlert",id:"deleteuseralert",level:2},{value:"broadcastMessage",id:"broadcastmessage",level:2},{value:"addSourceToSourceGroup",id:"addsourcetosourcegroup",level:2},{value:"removeSourceFromSourceGroup",id:"removesourcefromsourcegroup",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"node-client",children:"Node Client"}),"\n",(0,r.jsxs)(n.p,{children:["The Node Client is available on ",(0,r.jsx)(n.a,{href:"https://github.com/notifi-network/notifi-sdk-ts/tree/main/packages/notifi-node",children:"Github"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Generally, it is used for advanced functionality where you need to directly\ncall Notifi via an API. One example is implementing your own monitoring\nservice for dapp specific on-chain or off-chain events with a custom parser.\nThis enables very flexible and custom alert triggering logic where the dapp\nfully owns the decision of when to send out notifications."}),"\n",(0,r.jsxs)(n.p,{children:["The Node Client has 9 endpoints which will be described in detail below.\nTo follow along, please clone the sample of the Node Client on\n",(0,r.jsx)(n.a,{href:"https://github.com/notifi-network/notifi-sdk-ts/tree/main/packages/notifi-node-sample",children:"Github"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["First, start the server with ",(0,r.jsx)(n.code,{children:"npm run dev"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"login",children:"login"}),"\n",(0,r.jsxs)(n.p,{children:["The server will be running at ",(0,r.jsx)(n.code,{children:"https://localhost:8080"}),". To login, you can use the following script below.\nReplace the ",(0,r.jsx)(n.code,{children:"sid"})," and ",(0,r.jsx)(n.code,{children:"secret"})," fields with your ",(0,r.jsx)(n.code,{children:"sid"})," and ",(0,r.jsx)(n.code,{children:"secret"})," that can be found in the\n",(0,r.jsx)(n.a,{href:"https://admin.dev.notifi.network/",children:"Admin Console"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#!/bin/bash\n\n# Test the gateway to see if it\'s working\n\ncurl --location --request POST \'http://localhost:8080/login\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "sid": "9MJEU0",\n    "secret": "XBLNWj"\n}\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"This will return a response like the following:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{"token":"eyJhbG","expiry":"2023-07-24T22:06:58.735Z"}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You will need the token in the future so please save this. If the token\nexpires, please run this again to issue a new token. In future examples in this\ndocument, the token will be saved as a variable ",(0,r.jsx)(n.code,{children:"$LOGIN_TOKEN"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"sendsimplehealththreshold",children:"sendSimpleHealthThreshold"}),"\n",(0,r.jsxs)(n.p,{children:["The variable ",(0,r.jsx)(n.code,{children:"healthValue"})," varies by dapp, and it\u2019s used in conjunction with\n",(0,r.jsx)(n.code,{children:"VALUE_THRESHOLD"})," filters. The user subscribes to a ",(0,r.jsx)(n.code,{children:"DIRECT_PUSH"})," source with\nthe ",(0,r.jsx)(n.code,{children:"VALUE_THRESHOLD"})," filter, specifying a threshold in the alert filter\noptions. Then, the service sends a notification to that user's address using a\n",(0,r.jsx)(n.code,{children:"healthValue"}),", which will be evaluated against the threshold that the user\nused. Here is a sample test script:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#!/bin/bash\n\ncurl --location --request POST \'http://localhost:8080/sendSimpleHealthThreshold\' \\\n--header \'Content-Type: application/json\' \\\n--header "Authorization: Bearer $LOGIN_TOKEN" \\\n--data-raw \'{\n    "sid": "9MJEUA",\n    "secret": "XBLNWf",\n    "walletPublicKey": "8CHibP",\n    "walletBlockchain": "SOLANA",\n    "healthValue": 0.42\n}\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"If this is successful, the server will respond with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{"message":"success"}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"createtenantuser",children:"createTenantUser"}),"\n",(0,r.jsx)(n.p,{children:"This creates a tenant user for the platform. Below is a sample script.\nThe walletPublicKey has to be an id that doesn't exist already."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#!/bin/bash\n\ncurl --location --request POST \'http://localhost:8080/createTenantUser\' \\\n--header \'Content-Type: application/json\' \\\n--header "Authorization: Bearer $LOGIN_TOKEN" \\\n--data-raw \'{\n    "sid": "9MJEUJ",\n    "secret": "XBLNWf",\n    "walletPublicKey": "woeijf",\n    "walletBlockchain": "SOLANA"\n}\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"If this is successful, the server will respond with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{"userId":"6f97780b"}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This is used in the following method."}),"\n",(0,r.jsx)(n.h2,{id:"createdirectpushalert",children:"createDirectPushAlert"}),"\n",(0,r.jsx)(n.p,{children:"This creates a direct push alert for the relevant user."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#!/bin/bash\n\ncurl --location --request POST \'http://localhost:8080/createDirectPushAlert\' \\\n--header \'Content-Type: application/json\' \\\n--header "Authorization: Bearer $LOGIN_TOKEN" \\\n--data-raw \'{\n    "sid": "9MJEUJ",\n    "secret": "XBLNWf",\n    "userId": "658514e6",\n    "email": "test@gmail.com"\n}\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"If this is successful, the server will respond with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{"alert":{"id":"9e6b14"}}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"senddirectpush",children:"sendDirectPush"}),"\n",(0,r.jsx)(n.p,{children:"This can be used to send a direct push message."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#!/bin/bash\n\ncurl --location --request POST \'http://localhost:8080/sendDirectPush\' \\\n--header \'Content-Type: application/json\' \\\n--header "Authorization: Bearer $LOGIN_TOKEN" \\\n--data-raw \'{\n    "sid": "9MJEUJ",\n    "secret": "XBLNWf",\n    "walletPublicKey": "8CHibP",\n    "walletBlockchain": "SOLANA",\n    "message": "Hello World"\n}\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"If this is successful, the server will respond with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{"message":"success"}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"deleteuseralert",children:"deleteUserAlert"}),"\n",(0,r.jsx)(n.p,{children:"You can use this to delete the direct push alert for a user. This is commonly\nused if the user looks at the alerts and toggles and wants to remove an alert."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#!/bin/bash\n\ncurl --location --request POST \'http://localhost:8080/deleteUserAlert\' \\\n--header \'Content-Type: application/json\' \\\n--header "Authorization: Bearer $LOGIN_TOKEN" \\\n--data-raw \'{\n    "sid": "9MJEUJ",\n    "secret": "XBLNWf",\n    "alertId": "9e6b14"\n}\'\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If this is successful, it responds with the ",(0,r.jsx)(n.code,{children:"alertId"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{"alertId":"9e6b14"}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"broadcastmessage",children:"broadcastMessage"}),"\n",(0,r.jsx)(n.p,{children:"To send a broadcast message, use this script:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#!/bin/bash\n\ncurl --location --request POST \'http://localhost:8080/broadcastMessage\' \\\n--header \'Content-Type: application/json\' \\\n--header "Authorization: Bearer $LOGIN_TOKEN" \\\n--data-raw \'{\n    "sid": "9MJEUJ",\n    "secret": "XBLNWf",\n    "topicName": "topic.xyz__test",\n    "message": "Hello world",\n    "subject": "Test"\n}\'\n'})}),"\n",(0,r.jsx)(n.h2,{id:"addsourcetosourcegroup",children:"addSourceToSourceGroup"}),"\n",(0,r.jsx)(n.p,{children:"To add a source to a source group, use this script:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#!/bin/bash\n\ncurl --location --request POST \'http://localhost:8080/addSourceToSourceGroup\' \\\n--header \'Content-Type: application/json\' \\\n--header "Authorization: Bearer $LOGIN_TOKEN" \\\n--data-raw \'{\n    "sid": "9MJEUJ",\n    "secret": "XBLNWf",\n    "sourceGroupId": "23498234",\n    "walletAddress": "8CHibP",\n    "sourceType": "SOLANA_WALLET"\n}\'\n'})}),"\n",(0,r.jsx)(n.h2,{id:"removesourcefromsourcegroup",children:"removeSourceFromSourceGroup"}),"\n",(0,r.jsx)(n.p,{children:"To remove a source to a source group, use this script:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#!/bin/bash\n\ncurl --location --request POST \'http://localhost:8080/removeSourceFromSourceGroup\' \\\n--header \'Content-Type: application/json\' \\\n--header "Authorization: Bearer $LOGIN_TOKEN" \\\n--data-raw \'{\n    "sid": "9MJEUJ",\n    "secret": "XBLNWf",\n    "sourceGroupId": "23498234",\n    "walletAddress": "8CHibP",\n    "sourceType": "SOLANA_WALLET"\n}\'\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);