"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8799],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=c(r),f=o,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||s;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=f;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[d]="string"==typeof e?e:o,i[1]=a;for(var c=2;c<s;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3485:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const s={sidebar_position:4},i="Using External API's",a={unversionedId:"notifi-hosted-development/fetch-providers",id:"notifi-hosted-development/fetch-providers",title:"Using External API's",description:"Fetch APIs will be injected upon startup of your Notifi Hosted routine. You will have access to making API calls to your respective endpoints.",source:"@site/docs/notifi-hosted-development/fetch-providers.md",sourceDirName:"notifi-hosted-development",slug:"/notifi-hosted-development/fetch-providers",permalink:"/docs/next/notifi-hosted-development/fetch-providers",draft:!1,editUrl:"https://github.com/notifi-network/notifi-network.github.io/blob/main/docs/notifi-hosted-development/fetch-providers.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Using Persistant and Ephemeral Storage API's",permalink:"/docs/next/notifi-hosted-development/storage-providers"},next:{title:"Integrating Notifi React card",permalink:"/docs/next/alert-subscribe/react-card/"}},p={},c=[],l={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-external-apis"},"Using External API's"),(0,o.kt)("p",null,"Fetch APIs will be injected upon startup of your Notifi Hosted routine. You will have access to making API calls to your respective endpoints."),(0,o.kt)("p",null,"Example as shown below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},' const dataBody = {\n      query: yourQuery,\n      variables: {},\n    };\n\n    const response = await FetchUtils.post(fetchProxy, logger, {\n      url: {YOUR_URL},\n      headers: {},\n      body: dataBody,\n    });\n\n    if (response.statusCode !== 200) {\n      logger.error("Error in get cauldrons response.", {\n        response: response.response,\n        statusCode: response.statusCode,\n      });\n\n      throw new Error("Error in response");\n    }\n\n    const responseJson = JSON.parse(response.response);\n\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("em",{parentName:"p"},"Note: For Authentication Secrets, utilize the ",(0,o.kt)("a",{parentName:"em",href:"http://localhost:3000/docs/next/notifi-hosted-development/storage-providers"},"Persistant Storage API's")," to store and retrieve secrets"))))}u.isMDXComponent=!0}}]);