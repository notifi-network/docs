"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[149],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(r),m=a,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(h,s(s({ref:t},u),{},{components:r})):n.createElement(h,s({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1724:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:4},s="Examples & use cases",i={unversionedId:"usecases",id:"usecases",title:"Examples & use cases",description:"Rough decision making chart for what to use:",source:"@site/docs/usecases.md",sourceDirName:".",slug:"/usecases",permalink:"/docs/usecases",draft:!1,editUrl:"https://github.com/notifi-network/docs/docs/usecases.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Lifecycle of an alert",permalink:"/docs/alert-lifecycle"},next:{title:"Subscribing to alerts",permalink:"/docs/alert-subscribe/"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"examples--use-cases"},"Examples & use cases"),(0,a.kt)("p",null,"Rough decision making chart for what to use: "),(0,a.kt)("p",null,"Do you require special UI elements for users to sign up to your alert (e.g. sliders, buttons, etc. to pick threshholds)? "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Yes -> build UI components and use Notifi React Hooks (if on React) or Frontend Client to create alerts ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"No -> Use Notifi React Card (if on React) or follow simple example of Frontend Client "),(0,a.kt)("p",{parentName:"li"},"Note: The React card has components for users to enter the target (Email, SMS, Telegram) and basic opt-in check boxes"))),(0,a.kt)("p",null,"What is the desired trigger for your alert? "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Manual (e.g. announcement of new features) -> use Admin Panel - Send Test Messages or Community Manager to draft messages and send them"),(0,a.kt)("li",{parentName:"ul"},"Existing topic type (Price change, Balance change, etc.) -> use Admin Panel card config for React Card or pass correct ",(0,a.kt)("inlineCode",{parentName:"li"},"EventTypeItem")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"NotifiFrontendClient.ensureAlert()")),(0,a.kt)("li",{parentName:"ul"},"Events on the blockchain (e.g. liquidation, certain transactions, etc.) -> this requires a custom parser, reach out to us. If you are able to run your own parser that monitors blockchain transactions, you can have it trigger notifications through the Node Client. "),(0,a.kt)("li",{parentName:"ul"},"Off-chain events -> Reach out to us or run a service that calls Node Client to send out notifications. ")),(0,a.kt)("p",null,"Example use cases and how to integrate: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Allow users to opt-in to announcements and product updates"),(0,a.kt)("p",{parentName:"li"},"If on React configure a card in the Admin Panel and add the React Card to the dapp frontend. This will automatically set up relevant sources and filters.\nIf not on React use the Frontend Client to create alerts, make sure to use the correct topic id.\nSend out announcements from the Community Manager in the Admin Panel. ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Send out alert when price of an asset on Coingecko changed "),(0,a.kt)("p",{parentName:"li"},"Same as announcements and product updates, use topic type price change.\nAlerts will be send automatically whenever the coingecko price of a supported assets changes. "),(0,a.kt)("p",{parentName:"li"},"Note: For prices from outside Coingecko or other assets a more custom solution is required"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Send out alerts when a liquidation has happened "),(0,a.kt)("p",{parentName:"li"},"This requires a custom parser that can act as source for the alert. If Notifi provides this source, the React Card can be used (configured with the correct topic type) for creating alerts or by using the Frontend Client. Alerts will be triggered automatically in this case.\nIf the parser is not hosted by Notifi, a generic broadcast topic should be created, and the Node Client can be called to trigger alerts on that topic. For subscribing the React Card or Frontend Client can be used (with selecting the generic broadcast topic)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Alert the user when their position reaches a certain LTV (loan-to-value) threshhold that the user can choose"),(0,a.kt)("p",{parentName:"li"},"This requires a custom UI to allow users to choose their threshhold when subscribing as well as a custom parser as source for the alert. Build the UI components and use the React Hooks or Frontend Client to create the alerts.\nContact us for a custom parser as source, or alternatively you can run a service that uses the Node Client to send out notifications."))))}d.isMDXComponent=!0}}]);