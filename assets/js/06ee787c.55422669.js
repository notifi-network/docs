"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9828],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=d(r),f=a,h=l["".concat(s,".").concat(f)]||l[f]||u[f]||i;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:a,o[1]=c;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9486:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:2},o="Creating a card config",c={unversionedId:"alert-subscribe/react-card/create-card-id",id:"alert-subscribe/react-card/create-card-id",title:"Creating a card config",description:"In order to use the Notifi React Card a card config needs to be created accordingly.",source:"@site/docs/alert-subscribe/react-card/create-card-id.md",sourceDirName:"alert-subscribe/react-card",slug:"/alert-subscribe/react-card/create-card-id",permalink:"/docs/next/alert-subscribe/react-card/create-card-id",draft:!1,editUrl:"https://github.com/notifi-network/notifi-network.github.io/blob/main/docs/alert-subscribe/react-card/create-card-id.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Integrating Notifi React card",permalink:"/docs/next/alert-subscribe/react-card/"},next:{title:"Integrating the Notifi Frontend Client",permalink:"/docs/next/alert-subscribe/frontend-client/"}},s={},d=[{value:"Step 1",id:"step-1",level:4},{value:"Step 2",id:"step-2",level:4},{value:"Step 3",id:"step-3",level:4},{value:"Step 4",id:"step-4",level:4},{value:"Step 5 (optional)",id:"step-5-optional",level:4},{value:"Step 6",id:"step-6",level:4}],p={toc:d},l="wrapper";function u(e){let{components:t,...i}=e;return(0,a.kt)(l,(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-a-card-config"},"Creating a card config"),(0,a.kt)("p",null,"In order to use the ",(0,a.kt)("strong",{parentName:"p"},"Notifi React Card")," a card config needs to be created accordingly.\nThe card config serves as configuration of the React Card and enables multiple flexible uses of the React Card."),(0,a.kt)("h4",{id:"step-1"},"Step 1"),(0,a.kt)("p",null,"Log in to the ",(0,a.kt)("a",{parentName:"p",href:"https://admin.dev.notifi.network"},"Admin Portal")," (create an account if you haven't done so already) and head to the ",(0,a.kt)("em",{parentName:"p"},"Alert Manager")," page.\nSelect the ",(0,a.kt)("em",{parentName:"p"},"UI Config"),' tab and click on "Configure Card" or "+ UI Card". '),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"UI Config tab",src:r(7582).Z,width:"1044",height:"406"})),(0,a.kt)("h4",{id:"step-2"},"Step 2"),(0,a.kt)("p",null,"Give your card config a name. This name will never be shown to the end user, however we recommend using a descriptive name to easily distinguish different card configs from each other in the future.\nSelect the blockchain that users will be connecting their wallet from for this card. "),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Currently one card can only support one blockchain at the same time. If you have users from multiple chains, create a seperate card config for every chain and determine in the frontend which card config to load based on which chain the user is connecting from. ")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Naming card config",src:r(4696).Z,width:"574",height:"311"})),(0,a.kt)("h4",{id:"step-3"},"Step 3"),(0,a.kt)("p",null,"Add the ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/integration-overview/alerts-in-depth#topic"},"topics")," you have previously created (see ",(0,a.kt)("a",{parentName:"p",href:"../../create-topics/"},"here"),") to the card config. "),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The same topic can be used on multiple card configs. ")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Adding topics",src:r(3721).Z,width:"465",height:"194"}),"\n",(0,a.kt)("img",{alt:"Adding topics popup",src:r(4927).Z,width:"604",height:"254"})),(0,a.kt)("p",null,"Optional: Add tooltips to the topics that help users understand what alert they are subscribing to."),(0,a.kt)("h4",{id:"step-4"},"Step 4"),(0,a.kt)("p",null,"Select which destinations you want to allow for this card config. Destinations are equivalent to ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/integration-overview/alerts-in-depth#target"},"targets"),". "),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Check out ",(0,a.kt)("a",{parentName:"p",href:"../../category/styling-your-notifications"},"this")," section to set up your custom email domain, TG bot, or Discord bot.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"configuring destinations",src:r(5215).Z,width:"462",height:"481"})),(0,a.kt)("h4",{id:"step-5-optional"},"Step 5 (optional)"),(0,a.kt)("p",null,"Change the title and subtitles of the card, you can see a preview of the card titles on the right hand side. "),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"custom titles",src:r(9220).Z,width:"477",height:"445"})),(0,a.kt)("h4",{id:"step-6"},"Step 6"),(0,a.kt)("p",null,"Save your card config and copy the ",(0,a.kt)("strong",{parentName:"p"},"Card ID")," in the top. This is the ",(0,a.kt)("inlineCode",{parentName:"p"},"cardId")," param you will need in the react component here: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<NotifiSubscriptionCard\n  darkMode\n  inputLabels={inputLabels}\n  inputSeparators={inputSeparators}\n  cardId="<YOUR OWN CARD ID HERE>"\n/>\n')))}u.isMDXComponent=!0},7582:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/1-5773f5cdf0ab2f68f1f73b79850dbc19.png"},4696:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/2-297709135110c35a85e5ba6b340d3c79.png"},4927:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/3-63caeb1f4f068e1f02b4a15a0ae3fdb7.png"},3721:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/4-0e2ca6e113f9f8cf2ef29ea7f82f7a82.png"},5215:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/5-0a5c6ba4b8e8508c73b9627f2dd15b02.png"},9220:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/6-89117cb11326956ca6646db7edff9d03.png"}}]);