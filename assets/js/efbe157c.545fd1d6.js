"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7285],{8019:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var t=i(4848),s=i(8453);const o={},r="Node Client",a={id:"alert-trigger/node-client/index",title:"Node Client",description:"Using the Notifi Node SDK, developers are provided with a very flexible and custom alert triggering tool where the Dapp",source:"@site/versioned_docs/version-1.1.0/alert-trigger/node-client/index.md",sourceDirName:"alert-trigger/node-client",slug:"/alert-trigger/node-client/",permalink:"/docs/alert-trigger/node-client/",draft:!1,unlisted:!1,editUrl:"https://github.com/notifi-network/notifi-network.github.io/blob/main/versioned_docs/version-1.1.0/alert-trigger/node-client/index.md",tags:[],version:"1.1.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Admin Portal & Community Manager",permalink:"/docs/alert-trigger/admin-portal/"},next:{title:"Displaying Notification History",permalink:"/docs/notification-history/"}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Creating a client",id:"creating-a-client",level:2},{value:"Login",id:"login",level:2},{value:"publishFusionMessage",id:"publishfusionmessage",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"node-client",children:"Node Client"}),"\n",(0,t.jsxs)(n.p,{children:["Using the Notifi Node SDK, developers are provided with a very flexible and custom alert triggering tool where the Dapp\nfully owns the decision of when to send out notifications. After configuring alert topics and templates in the\n",(0,t.jsx)(n.a,{href:"https://admin.notifi.network",children:"Notifi Admin Portal"}),", developers can utilize the Notifi Node SDK to send notifications.\nExample use cases for this include triggering notifications based on off-chain events, or watching a chain in a\nself-hosted setup."]}),"\n",(0,t.jsxs)(n.p,{children:["The Notifi Node SDK is available on ",(0,t.jsx)(n.a,{href:"https://github.com/notifi-network/notifi-sdk-ts/tree/main/packages/notifi-node",children:"Github"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.p,{children:["In order to use the Node SDK to publish notifications, you first need to set up the following on the\n",(0,t.jsx)(n.a,{href:"https://admin.notifi.network",children:"Notifi Admin Portal"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A Dapp account (an account created on Admin Portal, NOT the Notifi Hub)"}),"\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.a,{href:"/docs/create-topics/api-triggered",children:'"Sent from my server" topic'}),", created in Alert Manager"]}),"\n",(0,t.jsx)(n.li,{children:"One or more subscriptions for users on that topic"}),"\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.a,{href:"/docs/create-topics/templates",children:"set of templates on that topic"})," for each messaging platform you want to support"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"When you have these things, you will be able to copy the SID and SECRET for your Dapp account\nunder Account Settings, and the Event Type ID from your topic."}),"\n",(0,t.jsx)(n.h2,{id:"creating-a-client",children:"Creating a client"}),"\n",(0,t.jsx)(n.p,{children:"First, instantiate a client in your Node application:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"import {\n  NotifiClient,\n  NotifiEnvironment,\n  createNotifiService, \n  createDataplaneClient, \n  createGraphQLClient,\n} from '@notifi-network/notifi-node';\n\nconst env: NotifiEnvironment = 'Production';\nconst gqlClient = createGraphQLClient(env);\nconst notifiService = createNotifiService(gqlClient);\nconst dataplaneApiClient = createDataplaneClient(env);\nconst client = new NotifiClient(notifiService, dataplaneApiClient);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"login",children:"Login"}),"\n",(0,t.jsxs)(n.p,{children:["Once you've created your client, log in using the SID and SECRET for your Dapp account,\nwhich can be found under Account Settings in the ",(0,t.jsx)(n.a,{href:"https://admin.notifi.network/",children:"Admin Console"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const MY_SID = process.env.MY_SID;\nconst MY_SECRET = process.env.MY_SECRET;\nconst { token, expiry } = await client.logIn({\n    sid: MY_SID,\n    secret: MY_SECRET\n})\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The returned ",(0,t.jsx)(n.code,{children:"token"})," is a ",(0,t.jsx)(n.a,{href:"https://jwt.io",children:"JavaScript Web Token"})," that you will use to authenticate\nall other requests made by your Node application."]}),"\n",(0,t.jsx)(n.h2,{id:"publishfusionmessage",children:"publishFusionMessage"}),"\n",(0,t.jsxs)(n.p,{children:["Once you have a token, you can then use it to publish messages to your topic. This is done through the\n",(0,t.jsx)(n.code,{children:"NotifiClient.publishFusionMessage"})," API."]}),"\n",(0,t.jsxs)(n.p,{children:["To send a message to ",(0,t.jsx)(n.strong,{children:"everyone"})," subscribed to a particular topic, use the call below:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'await client.publishFusionMessage(token, [{\n    eventTypeId: "abc123",\n    variablesJson: {\n        message: "Hello from Notifi!",\n        items: [\n            1,\n            2,\n            3    \n        ]\n    }\n}]);\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"eventTypeId"}),': The "Event Type ID" associated with the topic you\'re publishing to.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"variablesJson"}),": A bundle of JSON-serializable variables to be used during rendering\nof your message templates. This variable presents itself in your templates as ",(0,t.jsx)(n.code,{children:"eventData"})," -\ne.g. the expression ",(0,t.jsx)(n.code,{children:"{{eventData.fromAddress}}"}),' in your template will expand as "0x123"\nin the example above.']}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["To send a message to ",(0,t.jsx)(n.strong,{children:"only specific users"}),", also add the ",(0,t.jsx)(n.code,{children:"specificWallets"})," parameter,\nwhich is an array of wallet public key and blockchain name pairs - the message will be sent\nto all of these:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'await client.publishFusionMessage(token, [{\n    eventTypeId: "abc123",\n    variablesJson: {\n        fromAddress: "0x123abc",\n        amount: 250\n    },\n    specificWallets: [\n        {\n            walletPublicKey: "0x123abc",\n            walletBlockchain: "ETHEREUM"\n        },\n        {\n            walletPublicKey: "c123ABC",\n            walletBlockchain: "SOLANA"\n        }\n    ]\n}]);\n'})}),"\n",(0,t.jsx)(n.p,{children:"Note that wallet addresses should be converted to lowercase when submitting them\nhere, except for Solana addresses, which are case-sensitive."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);