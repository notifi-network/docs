"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,f=d["".concat(s,".").concat(u)]||d[u]||h[u]||a;return n?i.createElement(f,o(o({ref:t},c),{},{components:n})):i.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6368:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const a={},o="Node Client",l={unversionedId:"alert-trigger/node-client/index",id:"alert-trigger/node-client/index",title:"Node Client",description:"The Node Client is available on Github.",source:"@site/docs/alert-trigger/node-client/index.md",sourceDirName:"alert-trigger/node-client",slug:"/alert-trigger/node-client/",permalink:"/docs/alert-trigger/node-client/",draft:!1,editUrl:"https://github.com/notifi-network/notifi-network.github.io/docs/alert-trigger/node-client/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sending an alert through the Admin Portal",permalink:"/docs/alert-trigger/admin-panel/"},next:{title:"Displaying Notification History",permalink:"/docs/notification-history/"}},s={},p=[{value:"login",id:"login",level:2},{value:"sendSimpleHealthThreshold",id:"sendsimplehealththreshold",level:2}],c={toc:p},d="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"node-client"},"Node Client"),(0,r.kt)("p",null,"The Node Client is available on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/notifi-network/notifi-sdk-ts/tree/main/packages/notifi-node"},"Github"),"."),(0,r.kt)("p",null,"Generally, it is used for advanced functionality where you need to directly\ncall Notifi via an API. One example is implementing your own monitoring\nservice for dapp specific on-chain or off-chain events with a custom parser.\nThis enables very flexible and custom alert triggering logic where the dapp\nfully owns the decision of when to send out notifications."),(0,r.kt)("p",null,"The Node Client has 9 endpoints which will be described in detail below.\nTo follow along, please clone the sample of the Node Client on\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/notifi-network/notifi-sdk-ts/tree/main/packages/notifi-node-sample"},"Github"),"."),(0,r.kt)("p",null,"First, start the server with ",(0,r.kt)("inlineCode",{parentName:"p"},"npm run dev"),"."),(0,r.kt)("h2",{id:"login"},"login"),(0,r.kt)("p",null,"The server will be running at ",(0,r.kt)("inlineCode",{parentName:"p"},"https://localhost:8080"),". To login, you can use the following script below.\nReplace the ",(0,r.kt)("inlineCode",{parentName:"p"},"sid")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"secret")," fields with your ",(0,r.kt)("inlineCode",{parentName:"p"},"sid")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"secret")," that can be found on the\n",(0,r.kt)("a",{parentName:"p",href:"https://admin.dev.notifi.network/"},"Admin Console"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'#!/bin/bash\n\n# Test the gateway to see if it\'s working\n\ncurl --location --request POST \'http://localhost:8080/login\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "sid": "9MJEU0",\n    "secret": "XBLNWj"\n}\'\n')),(0,r.kt)("p",null,"This will return a response like the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{"token":"eyJhbG","expiry":"2023-07-24T22:06:58.735Z"}\n')),(0,r.kt)("p",null,"You will need the token in the future so please save this. If the token\nexpires, please run this again to issue a new token. In future examples in this\ndocument, the token will be saved as a variable ",(0,r.kt)("inlineCode",{parentName:"p"},"$LOGIN_TOKEN"),"."),(0,r.kt)("h2",{id:"sendsimplehealththreshold"},"sendSimpleHealthThreshold"),(0,r.kt)("p",null,"Here is a sample test script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'#!/bin/bash\n\n# Test the gateway to see if it\'s working\n\ncurl --location --request POST \'http://localhost:8080/sendSimpleHealthThreshold\' \\\n--header \'Content-Type: application/json\' \\\n--header "Authorization: Bearer $LOGIN_TOKEN" \\\n--data-raw \'{\n    "sid": "9MJEUA",\n    "secret": "XBLNWf",\n    "walletPublicKey": "8CHibP",\n    "walletBlockchain": "SOLANA",\n    "healthValue": 0.42\n}\'\n')),(0,r.kt)("p",null,"The variable ",(0,r.kt)("inlineCode",{parentName:"p"},"healthValue")," varies by dapp, and it\u2019s used in conjunction with\n",(0,r.kt)("inlineCode",{parentName:"p"},"VALUE_THRESHOLD")," filters. The user subscribes to a ",(0,r.kt)("inlineCode",{parentName:"p"},"DIRECT_PUSH")," source with\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"VALUE_THRESHOLD")," filter, specifying a threshold in the alert filter\noptions. Then, the service sends a notification to that user's address using a\n",(0,r.kt)("inlineCode",{parentName:"p"},"healthValue"),", which will be evaluated against the threshold that the user\nused."),(0,r.kt)("p",null,"If this is successful, the server will respond with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{"message":"success"}\n')))}h.isMDXComponent=!0}}]);