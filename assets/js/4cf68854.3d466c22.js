"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7751],{9563:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var i=t(4848),s=t(8453);const a={},o="Custom Email Templates",r={id:"alert-design/custom-email-templates",title:"Custom Email Templates",description:"Notifi uses templates to render the same notification in different forms for different channels such as email, Telegram, and SMS. We use Mustache templates, and you can try out a demo here//mustache.github.io/#demo",source:"@site/versioned_docs/version-1.0.0/alert-design/custom-email-templates.md",sourceDirName:"alert-design",slug:"/alert-design/custom-email-templates",permalink:"/docs/1.0.0/alert-design/custom-email-templates",draft:!1,unlisted:!1,editUrl:"https://github.com/notifi-network/notifi-network.github.io/blob/main/versioned_docs/version-1.0.0/alert-design/custom-email-templates.md",tags:[],version:"1.0.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using Community Manager",permalink:"/docs/1.0.0/alert-design/community-manager"},next:{title:"Custom Email domain",permalink:"/docs/1.0.0/alert-design/email-domain"}},l={},c=[];function d(e){const n={a:"a",code:"code",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"custom-email-templates",children:"Custom Email Templates"}),"\n",(0,i.jsxs)(n.p,{children:["Notifi uses templates to render the same notification in different forms for different channels such as email, Telegram, and SMS. We use ",(0,i.jsx)(n.a,{href:"https://mustache.github.io/mustache.5.html",children:"Mustache templates"}),", and you can try out a demo here: ",(0,i.jsx)(n.a,{href:"https://mustache.github.io/#demo",children:"https://mustache.github.io/#demo"})]}),"\n",(0,i.jsx)(n.p,{children:"When developing your template, keep the following in mind:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The variables you\u2019re providing and if you are using direct push or broadcast."}),"\n",(0,i.jsx)(n.li,{children:"System variables cannot be overridden, but can be used in the template."}),"\n",(0,i.jsx)(n.li,{children:"The maximum template size after expansion is:"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"a. Email - 16kb"}),"\n",(0,i.jsx)(n.p,{children:"b. SMS - 160 unicode or 320 ASCII characters"}),"\n",(0,i.jsx)(n.p,{children:"c. Telegram - 4kb (4096 ASCII characters)"}),"\n",(0,i.jsxs)(n.p,{children:["Please contact us at ",(0,i.jsx)(n.a,{href:"mailto:integrations@notifi.network",children:"integrations@notifi.network"})," to help set up templates. In the future, you will be able to update these yourself through a portal. Upon creating the templates, we will provide you with its relevant ID. All email, telegram, and SMS templates are linked to one ID."]}),"\n",(0,i.jsx)(n.p,{children:"When you send a push message, you will provide the template ID you\u2019d like to use for each destination."}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:" Example 1: Sending a Direct Push Alert via the Node SDK."}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Sending a DIRECT_TENANT_MESSAGE to the user\nimport {\n  NotifiClient\n} from '@notifi-network/notifi-node';\n\nconst client: NotifiClient = getNotifiClient();\n\n// Log in to obtain a token\nconst { token, expiry } = await client.logIn({ sid: MY_SID, secret: MY_SECRET });\n\n// Use the token to send a message to anyone subscribed to that wallet\nawait client.sendDirectPush(token, {\n  key: randomUUID(), // Idempotency key, use the same value for each unique event\n  walletBlockchain: 'NEAR', // Or 'SOLANA'\n  walletPublicKey: 'juni-kim.near', // Or other address\n  message: 'Hello world', // This is used if no variables are provided, or if template expansion fails\n  type: 'MY_SPECIAL_TYPE', // OPTIONAL - Users can use this to further filter what notifications they'd like to receive\n  template: { // OPTIONAL - Specify which templates to use\n    emailTemplate: '<PROVIDED_TEMPLATE_ID>',\n    smsTemplate:  '<PROVIDED_TEMPLATE_ID>',\n    telegramTemplate: '<PROVIDED_TEMPLATE_ID>',\n    variables: { // These are the variables used in your mustache templates\n      'userName': 'Juni Kim',\n      'anotherVariable': 'foo',\n      'anotherVariable1': 'The degens'\n    }\n  }\n});\n"})})]}),"\n",(0,i.jsx)(n.p,{children:"If you create an email template which looks like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<html>\n<body>\n<h2>Hi {{userName}},</h2>\nOur service is notifying you about {{anotherVariable}}!\n\nSincerely,\n{{anotherVariable1}}\n</body>\n</html>\n"})}),"\n",(0,i.jsx)(n.p,{children:"It will render as the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<html>\n<body>\n<h2>Hi Juni Kim,</h2>\nOur service is notifying you about foo!\n\nSincerely,\nThe degens\n</body>\n</html>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": Based on the email client that your recipeint is using, HTML may render differently. Please refer to ",(0,i.jsx)(n.a,{href:"https://www.smashingmagazine.com/2021/04/complete-guide-html-email-templates-tools/",children:"this link"})," for a quick overview on some basic pitfalls."]}),"\n",(0,i.jsx)(n.p,{children:"For SMS, since the message has a short maximum length, you can simply tell the user:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Notification for {{anotherVariable}}"})}),"\n",(0,i.jsxs)(n.p,{children:["For Telegram Templates, please refer to this guide on supported tags:\n",(0,i.jsx)(n.a,{href:"https://core.telegram.org/api/entities",children:"https://core.telegram.org/api/entities"})]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:" Example 2: Sending via client SDK a Broadcast Message."}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'const handleSubmit = useCallback(\n    async (t: UserTopic | undefined) => {\n      if (t === undefined) {\n        return;\n      }\n      try {\n        broadcastMessage(\n          {\n            topic: t,\n            subject: \u2018some subject\u2019,\n            message: \u2018your message to users\u2019,\n            isHolderOnly: false,\n          },\n          signer\n        );\n      } catch (e: unknown) {\n        console.log("Error during broadcastMessage", e);\n      }\n    },\n    [broadcastMessage, signer]\n  );\n'})})]}),"\n",(0,i.jsx)(n.p,{children:"If you create an email template which looks like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<html>\n<body>\n{{subject}}\n\n{{message}}\n</body>\n</html>\n"})}),"\n",(0,i.jsx)(n.p,{children:"It will render as the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<html>\n<body>\nsome subject\n\nyour message to users\n</body>\n</html>\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);